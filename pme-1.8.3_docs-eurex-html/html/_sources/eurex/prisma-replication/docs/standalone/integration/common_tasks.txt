============
Common Tasks
============

This page organizes several common use cases in incorporating the Eurex Clearing PME into your
applications.

What-If Analysis
================

It is expected that the Eurex Clearing PME will be used for what-if analysis, looking at
the impact of adding new trades to the cleared portfolio. To achieve this will require a
single ``MarginEnvironment`` with a single ``MarginData`` populated with the previous day's 
end of day data. Whether this is OTC or ETD or both will depend on the portfolios you are
interested in.

You will also require a ``MarginCalculator`` to process requests. When conducting what-if
analysis it is usual that performance is a key requirement. Therefore using the 
:ref:`delta_approximation` mode should be considered. It is also
more efficient if the base portfolio is provided as a :ref:`Eurex Sensitivities CSV <eurex_sensitivities_csv>`.

To perform what-if analysis you will need to do the following:

#. Ensure you a a ``MarginEnvironment`` available with the required market data
#. Calculate margin on the base portfolio
#. Calculate margin on the proposed new portfolio i.e. the base portfolio plus any new trades
   (see :ref:`Loading Portfolios <loading_portfolios>` for how to create portfolios containing trades
   from different sources)
#. Gather the results from each of these margin runs and calculate the incremental impact
   of adding the new trades to the base portfolio

Multiple Days of Market Data
============================

In a default use case, the expected use of the Eurex Clearing PME has a single ``MarginEnvironment``, with
a single ``MarginData``, typically configured with the previous day's end of day, which has
a single ``MarginCalculator`` to process requests. However, while our examples only load in a single
day's worth of data, it is entirely possible to have multiple days worth of data simultaneously loaded.

In this way, the calculation requests, which specify the valuation date, are keyed to the right
data in the ``MarginData`` structure. It is not possible out-of-the-box to issue calculation requests for a
date for which there is no data in the ``MarginData`` structure (so you cannot have a valuation
date of tomorrow when there is only market data loaded for today).

Configuring in this way will result in the ``MarginEnvironment`` having one thread pool, and thus
having better concurrency operation than constructing multiple ``MarginEnvironment`` s.
However, each day's worth of data has significant RAM overhead, and needs to be taken into
account when doing capacity planning.

Please bear in mind when designing for multi-day use case that you cannot remove historical data
from a ``MarginData`` structure. If you do not have sufficient heap to support all historical
data at once, you must design in the following pattern:

First, create your own ``ExecutorService``. (see :ref:`Concurrency <concurrency>`)

For each day of analysis required:

#. Create a ``MarginEnvironment``, using the shared ``ExecutorService``
#. Load in the market data for the day in question
#. Perform necessary calculations and gather results
#. Allow that ``MarginEnvironment`` to fall out of scope so that all market data resources can be garbage collected.


Log Configuration
=================

The Eurex Clearing PME uses `SLF4J <http://www.slf4j.org/>`_ , as do many of the third-party
libraries used by the PME. All log notifications generated by the PME itself (as opposed to
third-party underlying libraries) have a log context starting with ``com.opengamma.``